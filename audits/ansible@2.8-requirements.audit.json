[
  {
    "name": "babel",
    "version": "2.8.0",
    "vulns": [
      {
        "id": "PYSEC-2021-421",
        "fix_versions": [
          "2.9.1"
        ],
        "description": "Babel.Locale in Babel before 2.9.1 allows attackers to load arbitrary locale .dat files (containing serialized Python objects) via directory traversal, leading to code execution."
      }
    ]
  },
  {
    "name": "certifi",
    "version": "2020.4.5.1",
    "vulns": [
      {
        "id": "GHSA-43fp-rhv2-5gv8",
        "fix_versions": [
          "2022.12.7"
        ],
        "description": "Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store.  TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found [here](https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ)."
      }
    ]
  },
  {
    "name": "kerberos",
    "version": "1.3.1",
    "vulns": [
      {
        "id": "PYSEC-2017-49",
        "fix_versions": [],
        "description": "The checkPassword function in python-kerberos does not authenticate the KDC it attempts to communicate with, which allows remote attackers to cause a denial of service (bad response), or have other unspecified impact by performing a man-in-the-middle attack."
      }
    ]
  },
  {
    "name": "lxml",
    "version": "4.8.0",
    "vulns": [
      {
        "id": "PYSEC-2022-230",
        "fix_versions": [
          "4.9.1"
        ],
        "description": "NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered."
      }
    ]
  },
  {
    "name": "oslo-utils",
    "version": "4.1.1",
    "vulns": [
      {
        "id": "PYSEC-2022-258",
        "fix_versions": [
          "4.10.1"
        ],
        "description": "A flaw was found in python-oslo-utils. Due to improper parsing, passwords with a double quote ( \" ) in them cause incorrect masking in debug logs, causing any part of the password after the double quote to be plaintext."
      }
    ]
  },
  {
    "name": "paramiko",
    "version": "2.7.1",
    "vulns": [
      {
        "id": "PYSEC-2022-166",
        "fix_versions": [
          "2.9.3",
          "2.10.1"
        ],
        "description": "In Paramiko before 2.10.1, a race condition (between creation and chmod) in the write_private_key_file function could allow unauthorized information disclosure."
      }
    ]
  },
  {
    "name": "pycrypto",
    "version": "2.6.1",
    "vulns": [
      {
        "id": "PYSEC-2017-94",
        "fix_versions": [],
        "description": "Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py."
      },
      {
        "id": "PYSEC-2018-97",
        "fix_versions": [],
        "description": "lib/Crypto/PublicKey/ElGamal.py in PyCrypto through 2.6.1 generates weak ElGamal key parameters, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for PyCrypto's ElGamal implementation."
      }
    ]
  },
  {
    "name": "rsa",
    "version": "4.0",
    "vulns": [
      {
        "id": "PYSEC-2020-100",
        "fix_versions": [
          "4.7"
        ],
        "description": "It was found that python-rsa is vulnerable to Bleichenbacher timing attacks. An attacker can use this flaw via the RSA decryption API to decrypt parts of the cipher text encrypted with RSA."
      },
      {
        "id": "PYSEC-2020-99",
        "fix_versions": [
          "4.1"
        ],
        "description": "Python-RSA before 4.1 ignores leading '\\0' bytes during decryption of ciphertext. This could conceivably have a security-relevant impact, e.g., by helping an attacker to infer that an application uses Python-RSA, or if the length of accepted ciphertext affects application behavior (such as by causing excessive memory allocation)."
      }
    ]
  },
  {
    "name": "urllib3",
    "version": "1.25.9",
    "vulns": [
      {
        "id": "PYSEC-2021-108",
        "fix_versions": [
          "1.26.5"
        ],
        "description": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
      }
    ]
  }
]