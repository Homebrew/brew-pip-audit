[
  {
    "package": {
      "name": "gitpython",
      "version": "3.1.32",
      "ecosystem": "PyPI",
      "commit": ""
    },
    "vulnerabilities": [
      {
        "modified": "2023-09-07T22:00:57Z",
        "published": "2023-08-30T20:09:36Z",
        "schema_version": "1.4.0",
        "id": "GHSA-cwvm-v4w8-q58c",
        "aliases": [
          "CVE-2023-41040"
        ],
        "summary": "Blind local file inclusion",
        "details": "### Summary\n\nIn order to resolve some git references, GitPython reads files from the `.git` directory, in some places the name of the file being read is provided by the user, GitPython doesn't check if this file is located outside the `.git` directory. This allows an attacker to make GitPython read any file from the system.\n\n### Details\n\nThis vulnerability is present in\n\nhttps://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175\n\nThat code joins the base directory with a user given string without checking if the final path is located outside the base directory.\n\nI was able to exploit it from three places, but there may be more code paths that lead to it:\n\nhttps://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L605\n\nhttps://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L620\n\nhttps://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/index/base.py#L1353\n\n### PoC\n\nRunning GitPython within any repo should work, here is an example with the GitPython repo.\n\n```python\nimport git\n\nr = git.Repo(\".\")\n\n# This will make GitPython read the README.md file from the root of the repo\nr.commit(\"../README.md\")\nr.tree(\"../README.md\")\nr.index.diff(\"../README.md\")\n\n# Reading /etc/random\n# WARNING: this will probably halt your system, run with caution\n# r.commit(\"../../../../../../../../../dev/random\")\n```\n\n### Impact\n\nI wasn't able to show the contents of the files (that's why \"blind\" local file inclusion), depending on how GitPython is being used, this can be used by an attacker for something _inoffensive_ as checking if a file exits, or cause a DoS by making GitPython read a big/infinite file (like `/dev/random` on Linux systems).\n\n### Possible solutions\n\nA solution would be to check that the final path isn't located outside the `repodir` path (maybe even after resolving symlinks). Maybe there could be other checks in place to make sure that the reference names are valid.\n\n---\n\n> [!NOTE]\n> This vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.",
        "affected": [
          {
            "package": {
              "ecosystem": "PyPI",
              "name": "gitpython",
              "purl": "pkg:pypi/gitpython"
            },
            "ranges": [
              {
                "type": "ECOSYSTEM",
                "events": [
                  {
                    "introduced": "0"
                  },
                  {
                    "fixed": "3.1.35"
                  }
                ]
              }
            ],
            "versions": [
              "0.1.7",
              "0.2.0-beta1",
              "0.3.0-beta1",
              "0.3.0-beta2",
              "0.3.1-beta2",
              "0.3.2",
              "0.3.2.1",
              "0.3.2.RC1",
              "0.3.3",
              "0.3.4",
              "0.3.5",
              "0.3.6",
              "0.3.7",
              "1.0.0",
              "1.0.1",
              "1.0.2",
              "2.0.0",
              "2.0.1",
              "2.0.2",
              "2.0.3",
              "2.0.4",
              "2.0.5",
              "2.0.6",
              "2.0.7",
              "2.0.8",
              "2.0.9",
              "2.0.9.dev0",
              "2.0.9.dev1",
              "2.1.0",
              "2.1.1",
              "2.1.10",
              "2.1.11",
              "2.1.12",
              "2.1.13",
              "2.1.14",
              "2.1.15",
              "2.1.2",
              "2.1.3",
              "2.1.4",
              "2.1.5",
              "2.1.6",
              "2.1.7",
              "2.1.8",
              "2.1.9",
              "3.0.0",
              "3.0.1",
              "3.0.2",
              "3.0.3",
              "3.0.4",
              "3.0.5",
              "3.0.6",
              "3.0.7",
              "3.0.8",
              "3.0.9",
              "3.1.0",
              "3.1.1",
              "3.1.10",
              "3.1.11",
              "3.1.12",
              "3.1.13",
              "3.1.14",
              "3.1.15",
              "3.1.16",
              "3.1.17",
              "3.1.18",
              "3.1.19",
              "3.1.2",
              "3.1.20",
              "3.1.22",
              "3.1.23",
              "3.1.24",
              "3.1.25",
              "3.1.26",
              "3.1.27",
              "3.1.28",
              "3.1.29",
              "3.1.3",
              "3.1.30",
              "3.1.31",
              "3.1.32",
              "3.1.33",
              "3.1.34",
              "3.1.4",
              "3.1.5",
              "3.1.6",
              "3.1.7",
              "3.1.8",
              "3.1.9"
            ],
            "database_specific": {
              "last_known_affected_version_range": "<= 3.1.34",
              "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/08/GHSA-cwvm-v4w8-q58c/GHSA-cwvm-v4w8-q58c.json"
            }
          }
        ],
        "severity": [
          {
            "type": "CVSS_V3",
            "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
          }
        ],
        "references": [
          {
            "type": "WEB",
            "url": "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-cwvm-v4w8-q58c"
          },
          {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-41040"
          },
          {
            "type": "WEB",
            "url": "https://github.com/gitpython-developers/GitPython/commit/74e55ee4544867e1bd976b7df5a45869ee397b0b"
          },
          {
            "type": "PACKAGE",
            "url": "https://github.com/gitpython-developers/GitPython"
          },
          {
            "type": "WEB",
            "url": "https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175"
          },
          {
            "type": "WEB",
            "url": "https://github.com/pypa/advisory-database/tree/main/vulns/gitpython/PYSEC-2023-165.yaml"
          }
        ],
        "database_specific": {
          "cwe_ids": [
            "CWE-22"
          ],
          "github_reviewed": true,
          "github_reviewed_at": "2023-08-30T20:09:36Z",
          "nvd_published_at": null,
          "severity": "MODERATE"
        }
      },
      {
        "modified": "2023-09-06T15:40:53Z",
        "published": "2023-08-29T23:33:53Z",
        "schema_version": "1.4.0",
        "id": "GHSA-wfm5-v35h-vwf4",
        "aliases": [
          "CVE-2023-40590"
        ],
        "summary": "GitPython untrusted search path on Windows systems leading to arbitrary code execution",
        "details": "### Summary\n\nWhen resolving a program, Python/Windows look for the current working directory, and after that the PATH environment (see big warning in https://docs.python.org/3/library/subprocess.html#popen-constructor). GitPython defaults to use the `git` command, if a user runs GitPython from a repo has a `git.exe` or `git` executable, that program will be run instead of the one in the user's `PATH`.\n\n### Details\n\nThis is more of a problem on how Python interacts with Windows systems, Linux and any other OS aren't affected by this. But probably people using GitPython usually run it from the CWD of a repo.\n\nThe execution of the `git` command happens in\n\nhttps://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L277 \n\nhttps://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L983-L996\n\nAnd there are other commands executed that should probably be aware of this problem.\n\n### PoC\n\nOn a Windows system, create a `git.exe` or `git` executable in any directory, and import or run GitPython from that directory\n\n```\npython -c \"import git\"\n```\n\nThe git executable from the current directory will be run.\n\n### Impact\n\nAn attacker can trick a user to download a repository with a malicious `git` executable, if the user runs/imports GitPython from that directory, it allows the attacker to run any arbitrary commands.\n\n### Possible solutions\n \n- Default to an absolute path for the git program on Windows, like `C:\\\\Program Files\\\\Git\\\\cmd\\\\git.EXE` (default git path installation).\n- Require users to set the `GIT_PYTHON_GIT_EXECUTABLE` environment variable on Windows systems.\n- Make this problem prominent in the documentation and advise users to never run GitPython from an untrusted repo, or set the `GIT_PYTHON_GIT_EXECUTABLE` env var to an absolute path.\n- Resolve the executable manually by only looking into the `PATH` environment variable (suggested by @Byron)\n\n---\n\n> [!NOTE]\n> This vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.",
        "affected": [
          {
            "package": {
              "ecosystem": "PyPI",
              "name": "gitpython",
              "purl": "pkg:pypi/gitpython"
            },
            "ranges": [
              {
                "type": "ECOSYSTEM",
                "events": [
                  {
                    "introduced": "0"
                  },
                  {
                    "fixed": "3.1.33"
                  }
                ]
              }
            ],
            "versions": [
              "0.1.7",
              "0.2.0-beta1",
              "0.3.0-beta1",
              "0.3.0-beta2",
              "0.3.1-beta2",
              "0.3.2",
              "0.3.2.1",
              "0.3.2.RC1",
              "0.3.3",
              "0.3.4",
              "0.3.5",
              "0.3.6",
              "0.3.7",
              "1.0.0",
              "1.0.1",
              "1.0.2",
              "2.0.0",
              "2.0.1",
              "2.0.2",
              "2.0.3",
              "2.0.4",
              "2.0.5",
              "2.0.6",
              "2.0.7",
              "2.0.8",
              "2.0.9",
              "2.0.9.dev0",
              "2.0.9.dev1",
              "2.1.0",
              "2.1.1",
              "2.1.10",
              "2.1.11",
              "2.1.12",
              "2.1.13",
              "2.1.14",
              "2.1.15",
              "2.1.2",
              "2.1.3",
              "2.1.4",
              "2.1.5",
              "2.1.6",
              "2.1.7",
              "2.1.8",
              "2.1.9",
              "3.0.0",
              "3.0.1",
              "3.0.2",
              "3.0.3",
              "3.0.4",
              "3.0.5",
              "3.0.6",
              "3.0.7",
              "3.0.8",
              "3.0.9",
              "3.1.0",
              "3.1.1",
              "3.1.10",
              "3.1.11",
              "3.1.12",
              "3.1.13",
              "3.1.14",
              "3.1.15",
              "3.1.16",
              "3.1.17",
              "3.1.18",
              "3.1.19",
              "3.1.2",
              "3.1.20",
              "3.1.22",
              "3.1.23",
              "3.1.24",
              "3.1.25",
              "3.1.26",
              "3.1.27",
              "3.1.28",
              "3.1.29",
              "3.1.3",
              "3.1.30",
              "3.1.31",
              "3.1.32",
              "3.1.4",
              "3.1.5",
              "3.1.6",
              "3.1.7",
              "3.1.8",
              "3.1.9"
            ],
            "database_specific": {
              "last_known_affected_version_range": "<= 3.1.32",
              "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/08/GHSA-wfm5-v35h-vwf4/GHSA-wfm5-v35h-vwf4.json"
            },
            "ecosystem_specific": {
              "affected_functions": [
                ""
              ]
            }
          }
        ],
        "severity": [
          {
            "type": "CVSS_V3",
            "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
          }
        ],
        "references": [
          {
            "type": "WEB",
            "url": "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4"
          },
          {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40590"
          },
          {
            "type": "WEB",
            "url": "https://github.com/gitpython-developers/GitPython/issues/1635"
          },
          {
            "type": "WEB",
            "url": "https://github.com/gitpython-developers/GitPython/pull/1636"
          },
          {
            "type": "WEB",
            "url": "https://github.com/gitpython-developers/GitPython/commit/8b75434e2c8a082cdeb4971cc6f0ee2bafec45bc"
          },
          {
            "type": "WEB",
            "url": "https://docs.python.org/3/library/subprocess.html#popen-constructor"
          },
          {
            "type": "PACKAGE",
            "url": "https://github.com/gitpython-developers/GitPython"
          },
          {
            "type": "WEB",
            "url": "https://github.com/gitpython-developers/GitPython/releases/tag/3.1.33"
          },
          {
            "type": "WEB",
            "url": "https://github.com/pypa/advisory-database/tree/main/vulns/gitpython/PYSEC-2023-161.yaml"
          }
        ],
        "database_specific": {
          "cwe_ids": [
            "CWE-426"
          ],
          "github_reviewed": true,
          "github_reviewed_at": "2023-08-29T23:33:53Z",
          "nvd_published_at": null,
          "severity": "HIGH"
        }
      },
      {
        "modified": "2023-09-05T22:26:14Z",
        "published": "2023-08-28T18:15:00Z",
        "schema_version": "1.4.0",
        "id": "PYSEC-2023-161",
        "aliases": [
          "CVE-2023-40590",
          "GHSA-wfm5-v35h-vwf4"
        ],
        "details": " GitPython is a python library used to interact with Git repositories. When resolving a program, Python/Windows look for the current working directory, and after that the PATH environment. GitPython defaults to use the `git` command, if a user runs GitPython from a repo has a `git.exe` or `git` executable, that program will be run instead of the one in the user's `PATH`. This is more of a problem on how Python interacts with Windows systems, Linux and any other OS aren't affected by this. But probably people using GitPython usually run it from the CWD of a repo. An attacker can trick a user to download a repository with a malicious `git` executable, if the user runs/imports GitPython from that directory, it allows the attacker to run any arbitrary commands. There is no fix currently available for windows users, however there are a few mitigations. 1: Default to an absolute path for the git program on Windows, like `C:\\\\Program Files\\\\Git\\\\cmd\\\\git.EXE` (default git path installation). 2: Require users to set the `GIT_PYTHON_GIT_EXECUTABLE` environment variable on Windows systems. 3: Make this problem prominent in the documentation and advise users to never run GitPython from an untrusted repo, or set the `GIT_PYTHON_GIT_EXECUTABLE` env var to an absolute path. 4: Resolve the executable manually by only looking into the `PATH` environment variable.",
        "affected": [
          {
            "package": {
              "ecosystem": "PyPI",
              "name": "gitpython",
              "purl": "pkg:pypi/gitpython"
            },
            "ranges": [
              {
                "type": "ECOSYSTEM",
                "events": [
                  {
                    "introduced": "0"
                  },
                  {
                    "fixed": "3.1.33"
                  }
                ]
              }
            ],
            "versions": [
              "0.1.7",
              "0.2.0-beta1",
              "0.3.0-beta1",
              "0.3.0-beta2",
              "0.3.1-beta2",
              "0.3.2",
              "0.3.2.1",
              "0.3.2.RC1",
              "0.3.3",
              "0.3.4",
              "0.3.5",
              "0.3.6",
              "0.3.7",
              "1.0.0",
              "1.0.1",
              "1.0.2",
              "2.0.0",
              "2.0.1",
              "2.0.2",
              "2.0.3",
              "2.0.4",
              "2.0.5",
              "2.0.6",
              "2.0.7",
              "2.0.8",
              "2.0.9",
              "2.0.9.dev0",
              "2.0.9.dev1",
              "2.1.0",
              "2.1.1",
              "2.1.10",
              "2.1.11",
              "2.1.12",
              "2.1.13",
              "2.1.14",
              "2.1.15",
              "2.1.2",
              "2.1.3",
              "2.1.4",
              "2.1.5",
              "2.1.6",
              "2.1.7",
              "2.1.8",
              "2.1.9",
              "3.0.0",
              "3.0.1",
              "3.0.2",
              "3.0.3",
              "3.0.4",
              "3.0.5",
              "3.0.6",
              "3.0.7",
              "3.0.8",
              "3.0.9",
              "3.1.0",
              "3.1.1",
              "3.1.10",
              "3.1.11",
              "3.1.12",
              "3.1.13",
              "3.1.14",
              "3.1.15",
              "3.1.16",
              "3.1.17",
              "3.1.18",
              "3.1.19",
              "3.1.2",
              "3.1.20",
              "3.1.22",
              "3.1.23",
              "3.1.24",
              "3.1.25",
              "3.1.26",
              "3.1.27",
              "3.1.28",
              "3.1.29",
              "3.1.3",
              "3.1.30",
              "3.1.31",
              "3.1.32",
              "3.1.4",
              "3.1.5",
              "3.1.6",
              "3.1.7",
              "3.1.8",
              "3.1.9"
            ],
            "database_specific": {
              "source": "https://github.com/pypa/advisory-database/blob/main/vulns/gitpython/PYSEC-2023-161.yaml"
            }
          }
        ],
        "severity": [
          {
            "type": "CVSS_V3",
            "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
          }
        ],
        "references": [
          {
            "type": "WEB",
            "url": "https://docs.python.org/3/library/subprocess.html#popen-constructor"
          },
          {
            "type": "ADVISORY",
            "url": "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4"
          }
        ]
      },
      {
        "modified": "2023-09-07T14:33:25Z",
        "published": "2023-08-30T22:15:00Z",
        "schema_version": "1.4.0",
        "id": "PYSEC-2023-165",
        "aliases": [
          "CVE-2023-41040",
          "GHSA-cwvm-v4w8-q58c"
        ],
        "details": " GitPython is a python library used to interact with Git repositories. In order to resolve some git references, GitPython reads files from the `.git` directory, in some places the name of the file being read is provided by the user, GitPython doesn't check if this file is located outside the `.git` directory. This allows an attacker to make GitPython read any file from the system. This vulnerability is present in https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175. That code joins the base directory with a user given string without checking if the final path is located outside the base directory. This vulnerability cannot be used to read the contents of files but could in theory be used to trigger a denial of service for the program. This issue has not yet been addressed.",
        "affected": [
          {
            "package": {
              "ecosystem": "PyPI",
              "name": "gitpython",
              "purl": "pkg:pypi/gitpython"
            },
            "ranges": [
              {
                "type": "ECOSYSTEM",
                "events": [
                  {
                    "introduced": "0"
                  },
                  {
                    "fixed": "3.1.35"
                  }
                ]
              }
            ],
            "versions": [
              "0.1.7",
              "0.2.0-beta1",
              "0.3.0-beta1",
              "0.3.0-beta2",
              "0.3.1-beta2",
              "0.3.2",
              "0.3.2.1",
              "0.3.2.RC1",
              "0.3.3",
              "0.3.4",
              "0.3.5",
              "0.3.6",
              "0.3.7",
              "1.0.0",
              "1.0.1",
              "1.0.2",
              "2.0.0",
              "2.0.1",
              "2.0.2",
              "2.0.3",
              "2.0.4",
              "2.0.5",
              "2.0.6",
              "2.0.7",
              "2.0.8",
              "2.0.9",
              "2.0.9.dev0",
              "2.0.9.dev1",
              "2.1.0",
              "2.1.1",
              "2.1.10",
              "2.1.11",
              "2.1.12",
              "2.1.13",
              "2.1.14",
              "2.1.15",
              "2.1.2",
              "2.1.3",
              "2.1.4",
              "2.1.5",
              "2.1.6",
              "2.1.7",
              "2.1.8",
              "2.1.9",
              "3.0.0",
              "3.0.1",
              "3.0.2",
              "3.0.3",
              "3.0.4",
              "3.0.5",
              "3.0.6",
              "3.0.7",
              "3.0.8",
              "3.0.9",
              "3.1.0",
              "3.1.1",
              "3.1.10",
              "3.1.11",
              "3.1.12",
              "3.1.13",
              "3.1.14",
              "3.1.15",
              "3.1.16",
              "3.1.17",
              "3.1.18",
              "3.1.19",
              "3.1.2",
              "3.1.20",
              "3.1.22",
              "3.1.23",
              "3.1.24",
              "3.1.25",
              "3.1.26",
              "3.1.27",
              "3.1.28",
              "3.1.29",
              "3.1.3",
              "3.1.30",
              "3.1.31",
              "3.1.32",
              "3.1.33",
              "3.1.34",
              "3.1.4",
              "3.1.5",
              "3.1.6",
              "3.1.7",
              "3.1.8",
              "3.1.9"
            ],
            "database_specific": {
              "source": "https://github.com/pypa/advisory-database/blob/main/vulns/gitpython/PYSEC-2023-165.yaml"
            }
          }
        ],
        "severity": [
          {
            "type": "CVSS_V3",
            "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L"
          }
        ],
        "references": [
          {
            "type": "ADVISORY",
            "url": "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-cwvm-v4w8-q58c"
          },
          {
            "type": "WEB",
            "url": "https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175"
          }
        ]
      }
    ],
    "groups": [
      {
        "ids": [
          "GHSA-cwvm-v4w8-q58c",
          "PYSEC-2023-165"
        ]
      },
      {
        "ids": [
          "GHSA-wfm5-v35h-vwf4",
          "PYSEC-2023-161"
        ]
      }
    ]
  }
]