[
  {
    "name": "certifi",
    "version": "2022.5.18.1",
    "vulns": [
      {
        "id": "GHSA-43fp-rhv2-5gv8",
        "fix_versions": [
          "2022.12.7"
        ],
        "description": "Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store.  TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found [here](https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ)."
      }
    ]
  },
  {
    "name": "cryptography",
    "version": "3.3.2",
    "vulns": [
      {
        "id": "GHSA-w7pp-m8wf-vj6r",
        "fix_versions": [
          "39.0.1"
        ],
        "description": "Previously, `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers:  ```pycon >>> outbuf = b\"\\x00\" * 32 >>> c = ciphers.Cipher(AES(b\"\\x00\" * 32), modes.ECB()).encryptor() >>> c.update_into(b\"\\x00\" * 16, outbuf) 16 >>> outbuf b'\\xdc\\x95\\xc0x\\xa2@\\x89\\x89\\xadH\\xa2\\x14\\x92\\x84 \\x87\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00' ```  This would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python. This is a soundness bug -- it allows programmers to misuse an API, it cannot be exploited by attacker controlled data alone.  This now correctly raises an exception.  This issue has been present since `update_into` was originally introduced in cryptography 1.8."
      },
      {
        "id": "GHSA-x4qr-2fvf-3mr5",
        "fix_versions": [
          "39.0.1"
        ],
        "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.8.1-39.0.0  are vulnerable to a security issue. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20221213.txt and https://www.openssl.org/news/secadv/20230207.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.  "
      }
    ]
  },
  {
    "name": "gitpython",
    "version": "3.1.12",
    "vulns": [
      {
        "id": "GHSA-hcpj-qp55-gfph",
        "fix_versions": [
          "3.1.30"
        ],
        "description": "All versions of package gitpython are vulnerable to Remote Code Execution (RCE) due to improper user input validation, which makes it possible to inject a maliciously crafted remote URL into the clone command. Exploiting this vulnerability is possible because the library makes external calls to git without sufficient sanitization of input arguments."
      }
    ]
  },
  {
    "name": "mako",
    "version": "1.1.4",
    "vulns": [
      {
        "id": "PYSEC-2022-260",
        "fix_versions": [
          "1.2.2"
        ],
        "description": "Sqlalchemy mako before 1.2.2 is vulnerable to Regular expression Denial of Service when using the Lexer class to parse. This also affects babelplugin and linguaplugin."
      }
    ]
  }
]